# Generated by Django 4.2.7 on 2025-08-20 19:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cv_file', models.FileField(upload_to='cvs/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx'])], verbose_name='Fichier CV')),
                ('cover_letter', models.TextField(blank=True, null=True, verbose_name='Lettre de motivation')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('reviewing', "En cours d'examen"), ('ai_filtered', 'Filtré par IA'), ('shortlisted', 'Présélectionné'), ('interview', 'Entretien'), ('accepted', 'Accepté'), ('rejected', 'Rejeté'), ('withdrawn', 'Retiré')], default='pending', max_length=20, verbose_name='Statut')),
                ('ai_score', models.FloatField(blank=True, help_text="Score de pertinence calculé par l'IA (0-100)", null=True, verbose_name='Score IA')),
                ('ai_analysis', models.JSONField(blank=True, help_text="Détails de l'analyse IA (compétences, expérience, etc.)", null=True, verbose_name='Analyse IA')),
                ('recruiter_notes', models.TextField(blank=True, null=True, verbose_name='Notes du recruteur')),
                ('interview_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'entretien")),
                ('salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Prétention salariale')),
                ('available_from', models.DateField(blank=True, null=True, verbose_name='Disponible à partir du')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de candidature')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to=settings.AUTH_USER_MODEL, verbose_name='Candidat')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='jobs.job', verbose_name="Offre d'emploi")),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-created_at'],
                'unique_together': {('candidate', 'job')},
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateTimeField(verbose_name='Date prévue')),
                ('duration_minutes', models.PositiveIntegerField(default=60, verbose_name='Durée (minutes)')),
                ('interview_type', models.CharField(choices=[('phone', 'Téléphonique'), ('video', 'Visioconférence'), ('in_person', 'En personne'), ('technical', 'Technique')], default='video', max_length=20, verbose_name="Type d'entretien")),
                ('location_or_link', models.TextField(blank=True, help_text='Adresse physique ou lien de visioconférence', null=True, verbose_name='Lieu ou lien')),
                ('status', models.CharField(choices=[('scheduled', 'Programmé'), ('completed', 'Terminé'), ('cancelled', 'Annulé'), ('rescheduled', 'Reprogrammé')], default='scheduled', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, null=True, verbose_name="Notes d'entretien")),
                ('rating', models.PositiveIntegerField(blank=True, help_text='Note globale de 1 à 10', null=True, verbose_name='Note sur 10')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Retour détaillé')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='candidates.application', verbose_name='Candidature')),
                ('interviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_interviews', to=settings.AUTH_USER_MODEL, verbose_name='Recruteur')),
            ],
            options={
                'verbose_name': 'Entretien',
                'verbose_name_plural': 'Entretiens',
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='CVAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('extracted_text', models.TextField(blank=True, null=True, verbose_name='Texte extrait du CV')),
                ('extracted_skills', models.JSONField(default=list, help_text="Liste des compétences identifiées par l'IA", verbose_name='Compétences extraites')),
                ('extracted_experience', models.JSONField(default=list, help_text='Expériences professionnelles identifiées', verbose_name='Expérience extraite')),
                ('extracted_education', models.JSONField(default=list, help_text='Formations identifiées', verbose_name='Formation extraite')),
                ('skill_match_score', models.FloatField(default=0.0, verbose_name='Score de correspondance des compétences')),
                ('experience_match_score', models.FloatField(default=0.0, verbose_name="Score de correspondance de l'expérience")),
                ('education_match_score', models.FloatField(default=0.0, verbose_name='Score de correspondance de la formation')),
                ('overall_score', models.FloatField(default=0.0, verbose_name='Score global')),
                ('ai_recommendation', models.TextField(blank=True, null=True, verbose_name='Recommandation IA')),
                ('keywords_found', models.JSONField(default=list, verbose_name='Mots-clés trouvés')),
                ('missing_keywords', models.JSONField(default=list, verbose_name='Mots-clés manquants')),
                ('processed_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de traitement')),
                ('application', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='analysis', to='candidates.application', verbose_name='Candidature')),
            ],
            options={
                'verbose_name': 'Analyse de CV',
                'verbose_name_plural': 'Analyses de CV',
            },
        ),
    ]
