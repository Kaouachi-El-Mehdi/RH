# Generated by Django 4.2.7 on 2025-08-20 19:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du widget')),
                ('widget_type', models.CharField(choices=[('metric', 'Métrique'), ('chart', 'Graphique'), ('table', 'Tableau'), ('progress', 'Barre de progression'), ('list', 'Liste'), ('calendar', 'Calendrier')], max_length=20, verbose_name='Type de widget')),
                ('title', models.CharField(max_length=200, verbose_name='Titre affiché')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('config', models.JSONField(default=dict, help_text='Configuration spécifique au widget', verbose_name='Configuration')),
                ('query', models.TextField(blank=True, help_text='Requête SQL ou configuration pour récupérer les données', null=True, verbose_name='Requête de données')),
                ('refresh_interval', models.PositiveIntegerField(default=60, verbose_name='Intervalle de rafraîchissement (minutes)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié à')),
            ],
            options={
                'verbose_name': 'Widget de tableau de bord',
                'verbose_name_plural': 'Widgets de tableau de bord',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la métrique')),
                ('metric_type', models.CharField(choices=[('ai_accuracy', 'Précision IA'), ('processing_speed', 'Vitesse de traitement'), ('user_satisfaction', 'Satisfaction utilisateur'), ('system_uptime', 'Disponibilité système'), ('api_response_time', 'Temps de réponse API')], max_length=30, verbose_name='Type de métrique')),
                ('value', models.FloatField(verbose_name='Valeur')),
                ('unit', models.CharField(blank=True, max_length=20, null=True, verbose_name='Unité')),
                ('target_value', models.FloatField(blank=True, null=True, verbose_name='Valeur cible')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées')),
                ('measured_at', models.DateTimeField(auto_now_add=True, verbose_name='Mesuré à')),
            ],
            options={
                'verbose_name': 'Métrique de performance',
                'verbose_name_plural': 'Métriques de performance',
                'ordering': ['-measured_at'],
            },
        ),
        migrations.CreateModel(
            name='UserDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layout', models.JSONField(default=dict, help_text='Position et taille des widgets', verbose_name='Configuration de mise en page')),
                ('theme', models.CharField(choices=[('light', 'Clair'), ('dark', 'Sombre'), ('auto', 'Automatique')], default='light', max_length=20, verbose_name='Thème')),
                ('auto_refresh', models.BooleanField(default=True, verbose_name='Rafraîchissement automatique')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié à')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_config', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Tableau de bord utilisateur',
                'verbose_name_plural': 'Tableaux de bord utilisateur',
            },
        ),
        migrations.CreateModel(
            name='UserDashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_x', models.PositiveIntegerField(default=0, verbose_name='Position X')),
                ('position_y', models.PositiveIntegerField(default=0, verbose_name='Position Y')),
                ('width', models.PositiveIntegerField(default=4, verbose_name='Largeur')),
                ('height', models.PositiveIntegerField(default=3, verbose_name='Hauteur')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('custom_config', models.JSONField(blank=True, default=dict, verbose_name='Configuration personnalisée')),
                ('user_dashboard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.userdashboard')),
                ('widget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.dashboardwidget')),
            ],
            options={
                'verbose_name': 'Widget utilisateur',
                'verbose_name_plural': 'Widgets utilisateur',
                'unique_together': {('user_dashboard', 'widget')},
            },
        ),
        migrations.AddField(
            model_name='userdashboard',
            name='widgets',
            field=models.ManyToManyField(through='dashboard.UserDashboardWidget', to='dashboard.dashboardwidget', verbose_name='Widgets'),
        ),
        migrations.CreateModel(
            name='RecruitmentStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('period_type', models.CharField(choices=[('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('quarterly', 'Trimestriel'), ('yearly', 'Annuel')], max_length=20, verbose_name='Type de période')),
                ('jobs_published', models.PositiveIntegerField(default=0, verbose_name='Offres publiées')),
                ('jobs_closed', models.PositiveIntegerField(default=0, verbose_name='Offres fermées')),
                ('active_jobs', models.PositiveIntegerField(default=0, verbose_name='Offres actives')),
                ('total_applications', models.PositiveIntegerField(default=0, verbose_name='Total candidatures')),
                ('new_applications', models.PositiveIntegerField(default=0, verbose_name='Nouvelles candidatures')),
                ('ai_processed_applications', models.PositiveIntegerField(default=0, verbose_name='Candidatures traitées par IA')),
                ('shortlisted_applications', models.PositiveIntegerField(default=0, verbose_name='Candidatures présélectionnées')),
                ('interviews_scheduled', models.PositiveIntegerField(default=0, verbose_name='Entretiens programmés')),
                ('interviews_completed', models.PositiveIntegerField(default=0, verbose_name='Entretiens terminés')),
                ('hires_made', models.PositiveIntegerField(default=0, verbose_name='Embauches réalisées')),
                ('average_ai_score', models.FloatField(default=0.0, verbose_name='Score IA moyen')),
                ('average_processing_time', models.FloatField(default=0.0, verbose_name='Temps de traitement moyen (minutes)')),
                ('conversion_rate', models.FloatField(default=0.0, help_text='Pourcentage de candidatures aboutissant à une embauche', verbose_name='Taux de conversion (%)')),
                ('detailed_stats', models.JSONField(default=dict, help_text='Données supplémentaires pour les graphiques', verbose_name='Statistiques détaillées')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié à')),
                ('job_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='jobs.jobcategory', verbose_name="Catégorie d'emploi")),
            ],
            options={
                'verbose_name': 'Statistique de recrutement',
                'verbose_name_plural': 'Statistiques de recrutement',
                'ordering': ['-date'],
                'unique_together': {('date', 'period_type', 'job_category')},
            },
        ),
    ]
