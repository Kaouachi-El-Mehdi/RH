# Generated by Django 4.2.7 on 2025-08-20 19:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('candidates', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du modèle')),
                ('model_type', models.CharField(choices=[('bert', 'BERT'), ('gpt', 'GPT'), ('custom', 'Modèle personnalisé')], max_length=20, verbose_name='Type de modèle')),
                ('model_path', models.CharField(max_length=500, verbose_name='Chemin du modèle')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Modèle actif')),
                ('accuracy_score', models.FloatField(blank=True, help_text='Score de précision sur le jeu de test', null=True, verbose_name='Score de précision')),
                ('version', models.CharField(default='1.0', max_length=20, verbose_name='Version')),
                ('training_date', models.DateTimeField(blank=True, null=True, verbose_name="Date d'entraînement")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière modification')),
            ],
            options={
                'verbose_name': 'Modèle IA',
                'verbose_name_plural': 'Modèles IA',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SkillExtraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_name', models.CharField(max_length=100, verbose_name='Nom de la compétence')),
                ('category', models.CharField(choices=[('technical', 'Technique'), ('soft', 'Relationnel'), ('language', 'Langue'), ('certification', 'Certification'), ('tool', 'Outil'), ('framework', 'Framework'), ('methodology', 'Méthodologie')], max_length=20, verbose_name='Catégorie')),
                ('confidence_score', models.FloatField(help_text="Score de confiance de l'extraction (0-1)", verbose_name='Score de confiance')),
                ('context', models.TextField(blank=True, help_text='Phrase ou section où la compétence a été trouvée', null=True, verbose_name='Contexte')),
                ('years_experience', models.PositiveIntegerField(blank=True, null=True, verbose_name="Années d'expérience")),
                ('proficiency_level', models.CharField(blank=True, choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], max_length=20, null=True, verbose_name='Niveau de maîtrise')),
                ('extracted_at', models.DateTimeField(auto_now_add=True, verbose_name='Extrait à')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_extractions', to='candidates.application', verbose_name='Candidature')),
            ],
            options={
                'verbose_name': 'Extraction de compétence',
                'verbose_name_plural': 'Extractions de compétences',
                'ordering': ['-confidence_score'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours'), ('completed', 'Terminé'), ('failed', 'Échec'), ('retrying', 'Nouvelle tentative')], default='pending', max_length=20, verbose_name='Statut')),
                ('priority', models.PositiveIntegerField(default=1, help_text='1 = haute priorité, 5 = basse priorité', verbose_name='Priorité')),
                ('attempts', models.PositiveIntegerField(default=0, verbose_name='Tentatives')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name="Message d'erreur")),
                ('processing_time', models.FloatField(blank=True, null=True, verbose_name='Temps de traitement (secondes)')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Démarré à')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Terminé à')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('ai_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to='ai_analysis.aimodel', verbose_name='Modèle IA')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_queue', to='candidates.application', verbose_name='Candidature')),
            ],
            options={
                'verbose_name': 'File de traitement',
                'verbose_name_plural': 'Files de traitement',
                'ordering': ['priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='JobMatching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_match_details', models.JSONField(default=dict, help_text='Détails de la correspondance des compétences', verbose_name='Détails correspondance compétences')),
                ('experience_match_details', models.JSONField(default=dict, verbose_name='Détails correspondance expérience')),
                ('education_match_details', models.JSONField(default=dict, verbose_name='Détails correspondance formation')),
                ('location_match', models.BooleanField(default=False, verbose_name='Correspondance lieu')),
                ('salary_match', models.BooleanField(default=False, verbose_name='Correspondance salaire')),
                ('availability_match', models.BooleanField(default=False, verbose_name='Correspondance disponibilité')),
                ('overall_compatibility', models.FloatField(help_text='Score de compatibilité globale (0-100)', verbose_name='Compatibilité globale')),
                ('recommendation_reason', models.TextField(blank=True, null=True, verbose_name='Raison de la recommandation')),
                ('red_flags', models.JSONField(default=list, help_text='Liste des problèmes potentiels identifiés', verbose_name="Signaux d'alerte")),
                ('calculated_at', models.DateTimeField(auto_now_add=True, verbose_name='Calculé à')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_matchings', to='candidates.application', verbose_name='Candidature')),
            ],
            options={
                'verbose_name': 'Correspondance emploi',
                'verbose_name_plural': 'Correspondances emploi',
                'ordering': ['-overall_compatibility'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel'), ('custom', 'Personnalisé')], max_length=20, verbose_name='Type de rapport')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('data', models.JSONField(default=dict, verbose_name='Données du rapport')),
                ('total_applications', models.PositiveIntegerField(default=0, verbose_name='Total candidatures')),
                ('ai_processed', models.PositiveIntegerField(default=0, verbose_name='Traitées par IA')),
                ('recommended_candidates', models.PositiveIntegerField(default=0, verbose_name='Candidats recommandés')),
                ('average_score', models.FloatField(default=0.0, verbose_name='Score moyen')),
                ('processing_time_avg', models.FloatField(default=0.0, verbose_name='Temps de traitement moyen')),
                ('date_from', models.DateField(verbose_name='Date de début')),
                ('date_to', models.DateField(verbose_name='Date de fin')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL, verbose_name='Généré par')),
            ],
            options={
                'verbose_name': "Rapport d'analyse",
                'verbose_name_plural': "Rapports d'analyse",
                'ordering': ['-created_at'],
            },
        ),
    ]
