# Generated by Django 4.2.7 on 2025-08-20 19:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0001_initial'),
        ('candidates', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nom du template')),
                ('template_type', models.CharField(choices=[('application_received', 'Candidature reçue'), ('application_status_update', 'Mise à jour statut candidature'), ('interview_scheduled', 'Entretien programmé'), ('interview_reminder', 'Rappel entretien'), ('job_published', 'Offre publiée'), ('weekly_summary', 'Résumé hebdomadaire'), ('ai_analysis_complete', 'Analyse IA terminée')], max_length=30, verbose_name='Type de template')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('html_content', models.TextField(verbose_name='Contenu HTML')),
                ('text_content', models.TextField(blank=True, null=True, verbose_name='Contenu texte')),
                ('variables', models.JSONField(default=list, help_text='Liste des variables utilisables dans le template', verbose_name='Variables disponibles')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié à')),
            ],
            options={
                'verbose_name': 'Template de notification',
                'verbose_name_plural': 'Templates de notification',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_application_received', models.BooleanField(default=True, verbose_name='Email - Candidature reçue')),
                ('email_application_status_update', models.BooleanField(default=True, verbose_name='Email - Mise à jour candidature')),
                ('email_interview_scheduled', models.BooleanField(default=True, verbose_name='Email - Entretien programmé')),
                ('email_interview_reminder', models.BooleanField(default=True, verbose_name='Email - Rappel entretien')),
                ('email_weekly_summary', models.BooleanField(default=False, verbose_name='Email - Résumé hebdomadaire')),
                ('inapp_application_received', models.BooleanField(default=True, verbose_name='App - Candidature reçue')),
                ('inapp_application_status_update', models.BooleanField(default=True, verbose_name='App - Mise à jour candidature')),
                ('inapp_interview_scheduled', models.BooleanField(default=True, verbose_name='App - Entretien programmé')),
                ('inapp_ai_analysis_complete', models.BooleanField(default=True, verbose_name='App - Analyse IA terminée')),
                ('digest_frequency', models.CharField(choices=[('never', 'Jamais'), ('daily', 'Quotidien'), ('weekly', 'Hebdomadaire'), ('monthly', 'Mensuel')], default='weekly', max_length=20, verbose_name='Fréquence du digest')),
                ('quiet_hours_start', models.TimeField(blank=True, help_text='Pas de notifications pendant ces heures', null=True, verbose_name='Début heures silencieuses')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Fin heures silencieuses')),
                ('timezone', models.CharField(default='Europe/Paris', max_length=50, verbose_name='Fuseau horaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié à')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Préférence de notification',
                'verbose_name_plural': 'Préférences de notification',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titre')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Succès'), ('warning', 'Attention'), ('error', 'Erreur')], default='info', max_length=20, verbose_name='Type')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('normal', 'Normale'), ('high', 'Haute'), ('urgent', 'Urgente')], default='normal', max_length=20, verbose_name='Priorité')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lu')),
                ('action_url', models.URLField(blank=True, help_text='URL vers laquelle rediriger lors du clic', null=True, verbose_name="URL d'action")),
                ('action_label', models.CharField(blank=True, max_length=50, null=True, verbose_name='Libellé action')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expire à')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créée à')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lue à')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='candidates.application', verbose_name='Candidature liée')),
                ('related_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='jobs.job', verbose_name='Offre liée')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200, verbose_name='Sujet')),
                ('html_content', models.TextField(verbose_name='Contenu HTML')),
                ('text_content', models.TextField(blank=True, null=True, verbose_name='Contenu texte')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('sent', 'Envoyé'), ('failed', 'Échec'), ('bounced', 'Rebondi'), ('delivered', 'Délivré'), ('opened', 'Ouvert'), ('clicked', 'Cliqué')], default='pending', max_length=20, verbose_name='Statut')),
                ('email_id', models.CharField(blank=True, help_text="ID fourni par le service d'envoi", max_length=100, null=True, verbose_name='ID Email')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name="Message d'erreur")),
                ('attempts', models.PositiveIntegerField(default=0, verbose_name='Tentatives')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Programmé à')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé à')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Délivré à')),
                ('opened_at', models.DateTimeField(blank=True, null=True, verbose_name='Ouvert à')),
                ('clicked_at', models.DateTimeField(blank=True, null=True, verbose_name='Cliqué à')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé à')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
                ('related_application', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='candidates.application', verbose_name='Candidature liée')),
                ('related_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_notifications', to='jobs.job', verbose_name='Offre liée')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_emails', to='notifications.notificationtemplate', verbose_name='Template utilisé')),
            ],
            options={
                'verbose_name': 'Notification email',
                'verbose_name_plural': 'Notifications email',
                'ordering': ['-created_at'],
            },
        ),
    ]
